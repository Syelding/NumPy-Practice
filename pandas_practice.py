# -*- coding: utf-8 -*-
"""Pandas Practice

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VmFQeo-wPid8ukS_Po-UX4cCJr363LiS

**#Pandas Hands on Practice**
Pandas is a Python library used for working with data sets. It has functions for analyzing, cleaning, exploring, and manipulating data. Pandas allows us to analyze big data and make conclusions based on statistical theories
"""

#libraries used
import pandas as pd
import numpy as np

"""Pandas Series
Series is a one-dimensional labeled array capable of holding data of any type (integer, string, float, python objects, etc.). The axis labels are collectively called index.
pandas.Series( data, index, dtype, copy)
In lamens terms is that the advantage of a pandas series is that it is an orderd sequence of elements backed by a numpy array.
"""

# In millions
g7_pop = pd.Series([35.467, 63.951, 80.940, 60.665, 127.061, 64.511, 318.523])

g7_pop

g7_pop.name = 'G7 Population in millions'

g7_pop

g7_pop.dtype

g7_pop.values

type(g7_pop.values)

g7_pop

g7_pop[0]

g7_pop[1]

g7_pop.index

l = ['a', 'b', 'c']

g7_pop.index = [
    'Canada',
    'France',
    'Germany',
    'Italy',
    'Japan',
    'United Kingdom',
    'United States',
]

g7_pop

pd.Series({
    'Canada': 35.467,
    'France': 63.951,
    'Germany': 80.94,
    'Italy': 60.665,
    'Japan': 127.061,
    'United Kingdom': 64.511,
    'United States': 318.523
}, name='G7 Population in millions')

pd.Series(
    [35.467, 63.951, 80.94, 60.665, 127.061, 64.511, 318.523],
    index=['Canada', 'France', 'Germany', 'Italy', 'Japan', 'United Kingdom',
       'United States'],
    name='G7 Population in millions')

pd.Series(g7_pop, index=['France', 'Germany', 'Italy', 'Spain'])

"""Indexing

Labels:If nothing else is specified, the values are labeled with their index number. First value has index 0, second value has index 1 etc.

This label can be used to access a specified value.
"""

g7_pop

g7_pop['Canada']

g7_pop['Japan']

g7_pop.iloc[0]

#how to locate a specific element
g7_pop.iloc[0]

g7_pop.iloc[-1]

#multi indexing
g7_pop[['Italy', 'France']]

g7_pop.iloc[[0, 1]]

#slicing is different for series because the upper limit is included
g7_pop['Canada': 'Italy']

"""Conditional selection (boolean arrays) "Boolean Series""""

g7_pop

g7_pop > 70

g7_pop[g7_pop > 70]

g7_pop[g7_pop > g7_pop.mean()]

g7_pop.std()

"""Important Notations


~ not
| or
& and
"""

g7_pop[(g7_pop > g7_pop.mean() - g7_pop.std() / 2) | (g7_pop > g7_pop.mean() + g7_pop.std() / 2)]

"""Operations and methods"""

g7_pop

#how to easily change units
g7_pop * 1_000_000

g7_pop.mean()

np.log(g7_pop)

g7_pop['France': 'Italy'].mean()

"""Boolean arrays"""

g7_pop

g7_pop > 80

g7_pop[g7_pop > 80]

g7_pop[(g7_pop > 80) | (g7_pop < 40)]

g7_pop[(g7_pop > 80) & (g7_pop < 200)]

"""Modifying series"""

g7_pop['Canada'] = 40.5

g7_pop.iloc[-1] = 500

g7_pop

g7_pop[g7_pop < 70]

g7_pop[g7_pop < 70] = 99.99

g7_pop